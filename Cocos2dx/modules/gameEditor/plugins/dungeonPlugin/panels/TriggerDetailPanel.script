function init() {
    var container = this.container;
    var labels = ["名称", "id", "延时", "启动条件"];
    var attributes = ["name", "itemId", "delay", "startCondition"];
    var inputFalse = {
        "itemId": true
    };
    var dropDownList = {
        "startCondition": true
    }
    this.attributes = attributes;
    for (var i = 0; i < attributes.length; i++) {
        var atr1 = attributes[i];
        var label1 = labels[i];
        var fxml =
            '<f:Group horizontalCenter="0" xmlns:f="flower" xmlns:s="software">' +
            '<f:Label horizontalCenter="-55" width="50" text="' + label1 + '" verticalCenter="0"/>';
        if (dropDownList[atr1]) {
            fxml += '<s:ComboBox id="' + atr1 + 'ComboBox" horizontalCenter="30" width="100" verticalCenter="0"/>';
        } else {
            fxml += '<f:Input id="' + atr1 + 'Input" horizontalCenter="30" width="100" verticalCenter="0" ' + (inputFalse[atr1] ? 'touchEnabled="false"' : '') + '/>';
        }
        fxml += '</f:Group>';
        var ui = (new flower.UIParser()).parseUI(fxml);
        container.addChild(ui);
        if (dropDownList[atr1]) {
            this[atr1 + "ComboBox"] = ui[atr1 + "ComboBox"];
        } else {
            this[atr1 + "Input"] = ui[atr1 + "Input"];
        }
    }
    var fxml =
        '<f:ViewStack percentWidth="100" xmlns:f="flower" xmlns:s="software" xmlns:dg="dungeon">' +
        '<f:Group/>' +
        '<f:Group/>' +
        '<dg:MoveCondition/>' +
        '<dg:HPCondition/>' +
        '<dg:FinishCondition/>' +
        '<f:Group/>' +
        '<dg:AllDieCondition/>' +
        '</f:ViewStack>';
    this.viewStack = (new flower.UIParser()).parseUI(fxml);
    container.addChild(this.viewStack);
}

function set save(func) {
    this.__save = func;
}

function get save() {
    return this.__save;
}

function setData(val) {
    _super.prototype.setData.call(this, val);
    var changeViewStack = function (e) {
        this.viewStack.selectedIndex = this.data.startCondition.value;
        if (e) {
            if (this.data.startCondition.value == 2) {
                this.data.startValue = flower.DataManager.createData("dg.MoveCondition");
            } else if (this.data.startCondition.value == 3) {
                this.data.startValue = flower.DataManager.createData("dg.HPCondition");
            } else if (this.data.startCondition.value == 4) {
                this.data.startValue = flower.DataManager.createData("dg.FinishCondition");
            } else if (this.data.startCondition.value == 6) {
                this.data.startValue = flower.DataManager.createData("dg.AllDieCondition");
            } else {
                this.data.startValue = null;
            }
            this.save();
        }
        this.viewStack.selectedChild.save = this.save;
        this.viewStack.selectedChild.data = this.data.startValue;
    };
    changeViewStack.call(this);
    this.data.startCondition.addListener(flower.Event.UPDATE, changeViewStack, this);
    var attributes = this.attributes;
    for (var i = 0; i < attributes.length; i++) {
        var atr = attributes[i];
        (function (atr) {
            if (this[atr + "Input"]) {
                this[atr + "Input"].value = this.data[atr];
                this.data[atr].addListener(flower.Event.UPDATE, function (e) {
                    this.save();
                }, this);
            } else if (this[atr + "ComboBox"]) {
                this[atr + "ComboBox"].value = this.data[atr];
                this.data[atr].addListener(flower.Event.UPDATE, function (e) {
                    this.save();
                }, this);
            }
        }).bind(this)(atr);
    }
}